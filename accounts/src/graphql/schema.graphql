extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.0",
    import: ["@key", "@requires", "@shareable", "@provides", "@external"])

"""
An account is unique Auth0 user.
"""
type Account @key(fields: "id") {
  "The unique ID associated with the account."
  id: ID!
  "The date and time the account was created."
  createdAt: String!
  "The email associated with the account (must be unique)."
  email: String!
}

"""
Provides data to create a new account.
"""
input CreateAccountInput {
  "The new account's email (must be unique)."
  email: String!
  "The new account's password."
  password: String!
}

"""
Provides data to update an existing account's email.
"""
input UpdateAccountEmailInput {
  "The unique ID associated with the account."
  id: ID!
  "The updated account email."
  email: String!
}

"""
Provides data to update an existing account's password. A current password and
new password are required to update a password.
"""
input UpdateAccountPasswordInput {
  "The unique ID associated with the account."
  id: ID!
  "The updated account password."
  newPassword: String!
  "The existing account password."
  password: String!
}

type Query {
  "Retrieves a single account by ID."
  account(id: ID!): Account!
  "Retrieves a list of accounts."
  accounts: [Account]
  "Retrieves the account of the currently logged-in user."
  viewer: Account
}

type Mutation {
  "Creates a new account."
  createAccount(data: CreateAccountInput!): Account!
  "Updates an account's email."
  updateAccountEmail(data: UpdateAccountEmailInput!): Account!
  "Updates an account's password."
  updateAccountPassword(data: UpdateAccountPasswordInput!): Account!
}
